{"version":3,"file":"static/js/926.903a3555.chunk.js","mappings":"qNAOA,SAASA,EAAWC,GAClB,OAAIA,GAAO,KACDA,EAAM,KAAYC,QAAQ,GAAGC,QAAQ,OAAQ,IAAM,IAEzDF,GAAO,KACDA,EAAM,KAASC,QAAQ,GAAGC,QAAQ,OAAQ,IAAM,IAEtDF,GAAO,KACDA,EAAM,KAAMC,QAAQ,GAAGC,QAAQ,OAAQ,IAAM,IAEhDF,EA+ET,MAvEA,YAYI,IAXFG,EAWC,EAXDA,MACAC,EAUC,EAVDA,MACAC,EASC,EATDA,QACAC,EAQC,EARDA,MACAC,EAOC,EAPDA,MACAC,EAMC,EANDA,KACAC,EAKC,EALDA,YAEAC,GAGC,EAJDC,UAIC,EAHDD,IACAE,EAEC,EAFDA,YACAC,EACC,EADDA,iBAEA,GASIC,EAAAA,EAAAA,YAAWC,EAAAA,GARbC,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,eACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,gBACAC,EARF,EAQEA,aAGEC,EAAOzB,EAAWO,GAClBmB,EAAO1B,EAAWQ,GAClBmB,GAAWC,EAAAA,EAAAA,MAIf,OACE,iBAAKC,UAAU,YAAf,WACE,gBACEA,UAAU,YACVC,IAAK1B,EACL2B,IAAI,YACJC,QAAS,WACPL,EAAS,YAAD,OAAahB,IACrBM,EAAMN,GACNO,EAASb,GACTc,EAASZ,GACTa,EAASM,GACTL,EAAeR,GACfS,GAAY,GACZC,EAAgBT,GAChBU,EAAapB,OAGjB,iBAAKyB,UAAU,gBAAf,WACE,SAACI,EAAA,EAAD,CAAQJ,UAAU,SAASC,IAAKpB,EAAaqB,IAAKzB,KAClD,iBAAKuB,UAAU,aAAaG,QAAS,WACnCL,EAAS,YAAD,OAAahB,IACrBM,EAAMN,GACNO,EAASb,EAAM6B,OAAO,EAAE,KACxBf,EAASZ,GACTa,EAASM,GACTL,EAAeR,GACfS,GAAY,GACZC,EAAgBT,IARlB,WAUE,0BAAKT,EAAM6B,OAAO,EAAE,IAApB,UACA,iBAAML,UAAU,UAAhB,SAA2BvB,KAC3B,iBAAKuB,UAAU,UAAf,UACGJ,EADH,SACYhB,eC3BtB,MAlCA,WACE,OAAqBM,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BmB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAQZ,IAPAC,EAAAA,EAAAA,YAAU,WAjBHC,MAHG,gDAKN,IAAIC,gBAAgB,CAClBC,IAAKC,0CACLC,KAAM,sBACNC,MAAO,cACPC,WAAY,OAIhBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQC,OAAM,SAACC,GACjCC,QAAQC,IAAIF,MAOGJ,MAAK,SAACO,GACnBhB,EAAQgB,QAET,IAGO,OAAPjB,EACD,OACE,gBAAKN,UAAU,SAAf,SACGM,EAAKkB,MAAMC,KAAI,SAACC,GACf,OAAO,SAAC,EAAD,CACPnD,MAAOmD,EAAQC,QAAQC,WAAWC,OAAOC,IACzCtD,MAAOkD,EAAQC,QAAQnD,MACvBK,YAAY,GACZH,MAAOgD,EAAQK,WAAWC,UAC1BrD,MAAO+C,EAAQK,WAAWE,UAC1BrD,KAAK,aACLH,QAASiD,EAAQC,QAAQO,aACzBnD,UAAW2C,EAAQC,QAAQ5C,UAE3BD,GAAI4C,EAAQ5C,GACZE,YAAa0C,EAAQC,QAAQ3C,YAC7BC,iBAAkByC,EAAQK,WAAWI,cAHhCT,EAAQ5C","sources":["Components/VideoCard.js","Components/Videos.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport \"./VideoCard.css\";\r\nimport setContext from \"../Context/Context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction nFormatter(num) {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"G\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"M\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"K\";\r\n  }\r\n  return num;\r\n}\r\n\r\n// function numberWithCommas(x) {\r\n//   return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n// }\r\n\r\n\r\nfunction VideoCard({\r\n  image,\r\n  title,\r\n  channel,\r\n  views,\r\n  likes,\r\n  time,\r\n  channelLogo,\r\n  channelId,\r\n  id,\r\n  description,\r\n  NumberOfComments,\r\n}) {\r\n  const {\r\n    setId,\r\n    setTitle,\r\n    setViews,\r\n    setLikes,\r\n    setDescription,\r\n    setShowMore,\r\n    setCommentCount,\r\n    setThumbnail,\r\n  } = useContext(setContext);\r\n\r\n  let view = nFormatter(views);\r\n  let like = nFormatter(likes);\r\n  let navigate = useNavigate();\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"videoCard\">\r\n      <img\r\n        className=\"thumbnail\"\r\n        src={image}\r\n        alt=\"Thumbnail\"\r\n        onClick={() => {\r\n          navigate(`/watch?v=${id}`);\r\n          setId(id);\r\n          setTitle(title);\r\n          setViews(views);\r\n          setLikes(like);\r\n          setDescription(description);\r\n          setShowMore(true);\r\n          setCommentCount(NumberOfComments);\r\n          setThumbnail(image);\r\n        }}\r\n      />\r\n      <div className=\"videoCardInfo\">\r\n        <Avatar className=\"avatar\" src={channelLogo} alt={channel} />\r\n        <div className=\"videoTitle\" onClick={() => {\r\n          navigate(`/watch?v=${id}`);\r\n          setId(id);\r\n          setTitle(title.substr(0,50));\r\n          setViews(views);\r\n          setLikes(like);\r\n          setDescription(description);\r\n          setShowMore(true);\r\n          setCommentCount(NumberOfComments);\r\n        }}>\r\n          <h4>{title.substr(0,50)}...</h4>\r\n          <span className=\"details\">{channel}</span>\r\n          <div className=\"details\">\r\n            {view} Â· {time}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoCard;\r\n","import React from \"react\";\r\nimport \"./Videos.css\";\r\nimport VideoCard from \"./VideoCard\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport setContext from \"../Context/Context\";\r\n// import { ElevenMp } from \"@mui/icons-material\";\r\n\r\n\r\n\r\nlet video = \"https://www.googleapis.com/youtube/v3/videos?\";\r\n\r\nfunction makeRequest() {\r\n  return fetch(\r\n    video +\r\n      new URLSearchParams({\r\n        key: process.env.REACT_APP_API_KEY,\r\n        part: \"snippet, statistics\",\r\n        chart: \"mostPopular\",\r\n        maxResults: 100,\r\n        // regionCode: \"IN\",\r\n        \r\n      })\r\n  ).then((res) => res.json()).catch((error)=>{\r\n    console.log(error)\r\n  });\r\n}\r\n\r\nfunction Videos() {\r\n  const{data, setData}=useContext(setContext)\r\n  useEffect(function () {\r\n     makeRequest().then((ytData) => {\r\n      setData(ytData);\r\n    });\r\n  }, []);\r\n  // console.log(data);\r\n  // console.log(\"awdaw\", title)\r\n  if(data!==null){\r\n    return (\r\n      <div className=\"videos\">\r\n       { data.items.map((element)=>{\r\n          return <VideoCard\r\n          image={element.snippet.thumbnails.medium.url}\r\n          title={element.snippet.title}\r\n          channelLogo=\"\"\r\n          views={element.statistics.viewCount}\r\n          likes={element.statistics.likeCount}\r\n          time=\"3 days ago\"\r\n          channel={element.snippet.channelTitle}\r\n          channelId={element.snippet.channelId}\r\n          key={element.id}\r\n          id={element.id}\r\n          description={element.snippet.description}\r\n          NumberOfComments={element.statistics.commentCount}\r\n        />\r\n       })}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Videos;\r\n"],"names":["nFormatter","num","toFixed","replace","image","title","channel","views","likes","time","channelLogo","id","channelId","description","NumberOfComments","useContext","setContext","setId","setTitle","setViews","setLikes","setDescription","setShowMore","setCommentCount","setThumbnail","view","like","navigate","useNavigate","className","src","alt","onClick","Avatar","substr","data","setData","useEffect","fetch","URLSearchParams","key","process","part","chart","maxResults","then","res","json","catch","error","console","log","ytData","items","map","element","snippet","thumbnails","medium","url","statistics","viewCount","likeCount","channelTitle","commentCount"],"sourceRoot":""}